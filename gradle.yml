# workflow 타이틀
name: CI/CD

# GitHub Actions의 트리거 시점
# push : main 브랜치에 push가 발생했을 때 workflow 실행
# pull_request : main 브랜치로의 pr이 생성되거나 업데이트될 때 실행
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# workflow 에서 실행할 개별 작업 정의
jobs:

  # build라는 이름의 작업 정의
  build:
    runs-on: ubuntu-latest # 작업 실행 환경
    permissions: # repository 내용 읽기 권한만 설정
      contents: read

    steps: # 개 별 단계를 정의
      - uses: actions/checkout@v4 # 코드를 가져와 다음 단계에서 빌드 또는 처리 가능
      # 빌드 환경 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Gradle Wrapper 실행 권한 변경 - Gradle을 실행할 수 있도록 함
      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Gradle Clean 빌드 - 이전 build file 삭제 - 이전 결과 영향을 받지 않도록 함
      - name: Build with Gradle Clean
        run: ./gradlew clean

      # Gradle 빌드 (테스트 제외) - Gradle을 사용해 project 빌드
      - name: Build with Gradle Build
        run: ./gradlew build -x test

        # DockerHub 로그인 - Docker 이미지를 build 하고 push 할 권한을 줌
      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

        # Docker 이미지 빌드
      - name: Docker Image Build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }} .

        # DockerHub Push
      - name: DockerHub Push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}